@page "/accounting"
@using HomeBuxgalterFront.Filters;
@using HomeBuxgalterFront.Filters.Enums;
@using HomeBuxgalterFront.Models;
@inject RequestManager _requestManager

<h3 class="col-12" style="text-align:center">Accounting</h3>


<div class="d-flex justify-content-center" style="flex-wrap:wrap;">
    <div class="form-group row g-3 col-md-5" style="border-radius: 25px;
    margin-top: 1rem;
    padding: 2rem;
    box-shadow: 0 0rem 3rem rgba(8,7,16,0.6)!important;">

        <EditForm Model="@AccountingFilter" OnValidSubmit="@GetReportsByFilter">

            <label for="Category">Category</label>
            <InputSelect class="form-control" @bind-Value="@AccountingFilter.ByWhichTime">
                <option style="display:none" >Choose...</option>
                @{
                    for (int i = 0; i <= (int)EBy.Year; i++)
                    {
                        <option value="@((EBy)i)">@((EBy)i)</option>
                    }
                }
            </InputSelect>
            <label for="StartDate">StartDate</label>
            <InputDate placeholder="StartDate" class="form-control" @bind-Value="@AccountingFilter.StartDate" />

            <label for="EndDate">EndDate</label>
            <InputDate placeholder="EndDate" class="form-control" @bind-Value="@AccountingFilter.EndDate" />

            <button type="submit" class="btn btn-primary">Find</button>
        </EditForm>
    </div>
</div>

@if (ReportModels == null)
{
        <p><em>Loading...</em></p>
}
else
{
    <table class="chiroyli-jadval">
        <thead>
            <tr>
                <th>Date</th>
                <th>ProfitSummary</th>
                <th>OutlaySummary</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody>
            
    @foreach (var model in ReportModels)
    {
        if (model.Balance < 0)
        {
            <tr>
                <td>@model.Date.ToString("dd.MM.yyyy")</td>
                <td>@model.ProfitSummary</td>
                <td>@model.OutlaySummary</td>
                <td class="my-td-2">@model.Balance</td>
            </tr>
        }
        else if (model.Balance > 0)
        {
            <tr>
                <td>@model.Date.ToString("dd.MM.yyyy")</td>
                <td>@model.ProfitSummary</td>
                <td>@model.OutlaySummary</td>
                <td class="my-td">@model.Balance</td>
            </tr>
        }
        else
        {
            <tr>
                <td>@model.Date.ToString("dd.MM.yyyy")</td>
                <td>@model.ProfitSummary</td>
                <td>@model.OutlaySummary</td>
                <td>@model.Balance</td>
            </tr>
        }
    
    }
        </tbody>
    </table>
}

@code {
    private List<ReportModel>? ReportModels { get; set; } = new();
    private AccountingFilter AccountingFilter = new();

    protected override async Task OnInitializedAsync()
    {
        await GetReportsByFilter();
    }

    private async Task GetReportsByFilter()
    {
        ReportModels = await _requestManager.
            Get<List<ReportModel>>($"/api/accounting?{AccountingFilter.ToString()}");
        ReportModels = ReportModels?.OrderByDescending(r => r.Date).ToList();
    }
}
