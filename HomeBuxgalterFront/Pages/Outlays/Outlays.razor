@using HomeBuxgalterFront.Models.OutlayModels;
@inject HttpClient http
@inject RequestManager _requestManager
@page "/outlays"

<h3>Outlays</h3>

@if (_outlayList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row form-group" style="display: flex; margin-top: -40px">
        <div class="form-group row g-3" style="border-radius: 25px;
    margin-top: 1rem;
    padding: 2rem;">

            <EditForm Model="@_filter" OnValidSubmit="@GetOutlays" style="display:grid;align-items: center; gap: 20px; grid-template-columns: auto auto auto auto">
                <div>
                    <label for="CategoryName">Category Name</label>
                    <InputText class="form-control" @bind-Value="@_filter.CategoryName" />
                </div>

                <div>
                    <label for="StartAmount">Start Amount</label>
                    <InputNumber class="form-control" @bind-Value="@_filter.StartAmount" />
                </div>

                <div>
                    <label for="EndAmount">End Amount</label>
                    <InputNumber class="form-control" @bind-Value="@_filter.EndAmount" />
                </div>

                <div>
                    <label for="StartDate">StartDate</label>
                    <InputDate placeholder="StartDate" class="form-control" @bind-Value="@_filter.StartDate" />
                </div>

                <div>
                    <label for="EndDate">EndDate</label>
                    <InputDate placeholder="EndDate" class="form-control" @bind-Value="@_filter.EndDate" />
                </div>

                <button type="submit" style="height: 37px; width: 60px; margin-top:20px" class="btn btn-primary">Find</button>
            </EditForm>
        </div>
    </div>
    
    <div style="text-align: right; margin-top:auto">
        <a class="btn btn-success" href="/outlays/create">Create</a>
        <a class="btn btn-info" href="/outlays/categories">Categories</a>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Category</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var profit in _outlayList)
            {
                <tr>
                    <td>@profit!.Date.ToString("dd.MM.yyyy")</td>
                    <td>@profit.Category</td>
                    <td>@profit.Amount</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Outlay?>? _outlayList { get; set; } = new();
    private Filter _filter { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await GetOutlays();
    }

    private async Task GetOutlays()
    {
        _outlayList = await _requestManager.Get<List<Outlay?>?>($"/api/outlays?{_filter.ToString()}");
    }
}

