@using HomeBuxgalterFront.Models.ProfitModels;
@inject HttpClient http
@inject RequestManager _requestManager
@page "/profits"

<h3>Profits</h3>

@if (_profitList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
<div class="row form-group" style="display: flex; margin-top: -40px">
    <div class="form-group row g-3" style="border-radius: 25px;
    margin-top: 1rem;
    padding: 2rem;">

        <EditForm Model="@_filter" OnValidSubmit="@GetReportsByFilter" style="display:grid;align-items: center; gap: 20px; grid-template-columns: auto auto auto auto">
            <div>
                <label for="ByWhichTime">ByWhichTime</label>
                <InputSelect class="form-control" @bind-Value="@AccountingFilter.ByWhichTime">
                    <option style="display:none">Choose...</option>
                    @{
                        for (int i = 0; i <= (int)EBy.Year; i++)
                        {
                            <option value="@((EBy)i)">@((EBy)i)</option>
                        }
                    }
                </InputSelect>
            </div>
            <div>
                <label for="StartDate">StartDate</label>
                <InputDate placeholder="StartDate" class="form-control" @bind-Value="@_filter.StartDate" />
            </div>
            <div>
                <label for="EndDate">EndDate</label>
                <InputDate placeholder="EndDate" class="form-control" @bind-Value="@_filter.EndDate" />
            </div>
            
            <button type="submit" style="height: 37px; width: 60px; margin-top:20px" class="btn btn-primary">Find</button>
        </EditForm>
    </div>
</div>

    <div style="text-align: right; margin-top:auto">
        <a class="btn btn-success" href="/profits/create">Create</a>
        <a class="btn btn-info" href="/profits/categories">Categories</a>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Category</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var profit in _profitList)
        {
                   <tr>
                        <td>@profit!.Date.ToShortDateString()</td>
                        <td>@profit.Category</td>
                        <td>@profit.Amount</td>
                   </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Profit?>? _profitList { get; set; } = new();
    private Filter _filter { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async Task GetProfits()
    {
        _profitList = await _requestManager.Get<List<Profit?>?>($"/api/profits");
    }
}
